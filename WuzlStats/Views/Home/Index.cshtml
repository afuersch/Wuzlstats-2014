@model WuzlStats.ViewModels.Home.IndexViewModel

<div class="row">
    <div class="col-md-6">

        <div class="hidden-sm hidden-xs">
            <p>
                <small>Only 4-player game scores are allowed. You are a team player, aren't you, punk?</small>
            </p>
        </div>

        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-xs-4">
                    <label>Blue Team</label>
                    @Html.TextBoxFor(x => x.TeamBlueOffensePlayer, new { placeholder = "Offense Player", required = "required", @class = "form-control", list = "players", autocomplete = "off", style = "width:100%;" })<br />
                    @Html.TextBoxFor(x => x.TeamBlueDefensePlayer, new { placeholder = "Defense Player", required = "required", @class = "form-control", list = "players", autocomplete = "off", style = "width:100%;" })
                </div>
                <div class="col-xs-4" style="font-size: 1.5em; margin-top:40px; padding:0;">
                    <div class="row">
                        <div class="col-xs-6">
                            @Html.TextBoxFor(x => x.TeamBlueScore, new { required = "required", style = "max-width:50px; font-size: 1em; height: 2em; text-align:center; margin-right: auto; margin-left: auto;", @class = "form-control" })
                        </div>
                        <div class="col-xs-6">
                            @Html.TextBoxFor(x => x.TeamRedScore, new { required = "required", style = "max-width:50px; font-size: 1em; height:2em; text-align:center; margin-right: auto; margin-left: auto;", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-4">
                    <label>Red Team</label>
                    @Html.TextBoxFor(x => x.TeamRedOffensePlayer, new { placeholder = "Offense Player", required = "required", @class = "form-control", list = "players", autocomplete = "off", style = "width:100%;" })<br />
                    @Html.TextBoxFor(x => x.TeamRedDefensePlayer, new { placeholder = "Defense Player", required = "required", @class = "form-control", list = "players", autocomplete = "off", style = "width:100%;" })
                </div>
            </div>
            <p style="margin-top: 20px; text-align: center;">
                <button type="submit" class="btn btn-primary" style="width:33%;">Save Score</button>
            </p>

            <datalist id="players">
                @foreach (var p in Model.AllPlayers)
                {
                    <option value="@p"></option>
                }
            </datalist>



            <div class="well" style="margin-top:81px;">
                <div class="row">
                    <div class="col-sm-6">
                        <label>Most active players</label>
                        <table class="table table-striped table-condensed">
                            <tr>
                                <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                                <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                                <th></th>
                            </tr>

                            @foreach (var p in Model.MostActivePlayers.Take(7))
                            {
                                <tr>
                                    <td>@(p.WinsOffense + p.WinsDefense)</td>
                                    <td>@(p.LossesOffense + p.LossesDefense)</td>
                                    <td>@Html.ActionLink(p.Name, "Index", "Player", new { playerName = p.Name }, null)</td>
                                </tr>
                            }
                        </table>
                    </div>
                    <div class="col-sm-6">
                        <label>Best teams</label>
                        <table class="table table-striped table-condensed">
                            <tr>
                                <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                                <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                                <th></th>
                                <th></th>
                            </tr>

                            @foreach (var p in Model.BestTeams.Take(7))
                            {
                                <tr>
                                    <td>@(p.Wins)</td>
                                    <td>@(p.Losses)</td>
                                    <td>@Html.ActionLink(p.OffensePlayerName, "Index", "Player", new { playerName = p.OffensePlayerName }, null)</td>
                                    <td>@Html.ActionLink(p.DefensePlayerName, "Index", "Player", new { playerName = p.DefensePlayerName }, null)</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

            </div>
        }
    </div>

    <div class="col-md-6">

        <div class="hidden-sm hidden-xs">
            <div class="pull-right"><small style="padding-left: 30px;">@Html.ActionLink("Delete score", "Index", "Delete")</small></div>
            <p>
                <small>All stats only include the scores of the last 30 days. Also, ties are for pussies and are not counted at all.</small>
            </p>
        </div>

        <div class="well">
            <div class="row">
                <div class="col-sm-6">
                    <label>Best players</label>
                    <table class="table table-striped table-condensed">
                        <tr>
                            <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                            <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                            <th></th>
                        </tr>

                        @foreach (var p in Model.BestPlayers.Take(5))
                        {
                            <tr>
                                <td>@(p.WinsOffense + p.WinsDefense)</td>
                                <td>@(p.LossesOffense + p.LossesDefense)</td>
                                <td>@Html.ActionLink(p.Name, "Index", "Player", new { playerName = p.Name }, null)</td>
                            </tr>
                        }
                    </table>
                </div>
                <div class="col-sm-6">
                    <label>Worst players</label>
                    <table class="table table-striped table-condensed">
                        <tr>
                            <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                            <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                            <th></th>
                        </tr>

                        @foreach (var p in Model.WorstPlayers.Take(5))
                        {
                            <tr>
                                <td>@(p.WinsOffense + p.WinsDefense)</td>
                                <td>@(p.LossesOffense + p.LossesDefense)</td>
                                <td>@Html.ActionLink(p.Name, "Index", "Player", new { playerName = p.Name }, null)</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>

        <div class="well">
            <div class="row">
                <div class="col-sm-6">
                    <label>Best offense players</label>
                    <table class="table table-striped table-condensed">
                        <tr>
                            <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                            <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                            <th></th>
                        </tr>

                        @foreach (var p in Model.BestOffensePlayers.Take(5))
                        {
                            <tr>
                                <td>@(p.WinsOffense)</td>
                                <td>@(p.LossesOffense)</td>
                                <td>@Html.ActionLink(p.Name, "Index", "Player", new { playerName = p.Name }, null)</td>
                            </tr>
                        }
                    </table>
                </div>
                <div class="col-sm-6">
                    <label>Best defense players</label>
                    <table class="table table-striped table-condensed">
                        <tr>
                            <th><span class="glyphicon glyphicon-thumbs-up"></span></th>
                            <th><span class="glyphicon glyphicon-thumbs-down"></span></th>
                            <th></th>
                        </tr>

                        @foreach (var p in Model.BestDefensePlayers.Take(5))
                        {
                            <tr>
                                <td>@(p.WinsDefense)</td>
                                <td>@(p.LossesDefense)</td>
                                <td>@Html.ActionLink(p.Name, "Index", "Player", new { playerName = p.Name }, null)</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>